{
    "root": true,
    "ignorePatterns": [
        "projects/**/*"
    ],
    "overrides": [
        {
            "files": [
                "*.ts"
            ],
            "parserOptions": {
                "project": [
                    "tsconfig.json",
                    "e2e/tsconfig.json"
                ],
                "createDefaultProgram": true
            },
            "extends": [
                "plugin:@typescript-eslint/recommended",
                "plugin:@angular-eslint/recommended",
                "plugin:@angular-eslint/recommended--extra",
                "plugin:@angular-eslint/template/process-inline-templates",
                "plugin:prettier/recommended"
            ],
            "plugins": [
                "deprecation",
                "eslint-plugin-unicorn",
                "eslint-plugin-no-null",
                "eslint-plugin-rxjs",
                "unused-imports",
                "prefer-arrow",
                "rxjs-angular",
                "import"
            ],
            "rules": {
                "@angular-eslint/component-class-suffix": [
                    "error",
                    {
                        "suffixes": [
                            "Component"
                        ]
                    }
                ],
                "@angular-eslint/component-selector": [
                    "error",
                    {
                        "type": "element",
                        "prefix": [
                            "ngx",
                            "test",
                            "app"
                        ],
                        "style": "kebab-case"
                    }
                ],
                "@angular-eslint/directive-class-suffix": [
                    "error",
                    {
                        "suffixes": [
                            "Directive"
                        ]
                    }
                ],
                "@angular-eslint/directive-selector": [
                    "error",
                    {
                        "type": "attribute",
                        "prefix": [
                            "ngx",
                            "test"
                        ],
                        "style": "camelCase"
                    }
                ],
                "@angular-eslint/no-forward-ref": "error",
                "@angular-eslint/no-queries-metadata-property": "error",
                "@angular-eslint/prefer-output-readonly": "error",
                "@angular-eslint/use-component-view-encapsulation": "error",
                "@angular-eslint/no-pipe-impure": "error",
                "@typescript-eslint/no-unused-expressions": [
                    "error",
                    {
                        "allowShortCircuit": true,
                        "allowTernary": true
                    }
                ],
                "@typescript-eslint/member-ordering": [
                    "error",
                    {
                        "default": {
                            "memberTypes": [
                                "signature",
                                "public-static-field",
                                "protected-static-field",
                                "private-static-field",
                                "public-instance-field",
                                "protected-instance-field",
                                "private-instance-field",
                                "public-constructor",
                                "protected-constructor",
                                "private-constructor",
                                "public-instance-method",
                                "protected-instance-method",
                                "private-instance-method"
                            ],
                            "order": "alphabetically"
                        }
                    }
                ],
                "@typescript-eslint/naming-convention": [
                    "error",
                    {
                        "selector": "enumMember",
                        "format": [
                            "PascalCase"
                        ],
                        "filter": {
                            "regex": "_",
                            "match": false
                        }
                    },
                    {
                        "selector": "variable",
                        "types": [
                            "boolean"
                        ],
                        "format": [
                            "PascalCase"
                        ],
                        "prefix": [
                            "is",
                            "should",
                            "has",
                            "can",
                            "did",
                            "will"
                        ]
                    }
                ],
                "@typescript-eslint/no-inferrable-types": [
                    "error",
                    {
                        "ignoreParameters": true,
                        "ignoreProperties": true
                    }
                ],
                "@typescript-eslint/array-type": [
                    "error",
                    {
                        "default": "generic"
                    }
                ],
                "@typescript-eslint/consistent-type-definitions": "error",
                "@typescript-eslint/explicit-member-accessibility": [
                    "error",
                    {
                        "accessibility": "no-public"
                    }
                ],
                "@typescript-eslint/explicit-function-return-type": [
                    "error",
                    {
                        "allowExpressions": false,
                        "allowTypedFunctionExpressions": false,
                        "allowHigherOrderFunctions": false,
                        "allowDirectConstAssertionInArrowFunctions": false,
                        "allowConciseArrowFunctionExpressionsStartingWithVoid": true
                    }
                ],
                "@typescript-eslint/no-empty-function": "error",
                "@typescript-eslint/dot-notation": "off",
                "@typescript-eslint/no-unused-vars": "off",
                "unused-imports/no-unused-imports": "error",
                "unused-imports/no-unused-vars": [
                    "warn",
                    {
                        "vars": "all",
                        "varsIgnorePattern": "^_",
                        "args": "after-used",
                        "argsIgnorePattern": "^_"
                    }
                ],
                "@typescript-eslint/typedef": [
                    "error",
                    {
                        "arrayDestructuring": true,
                        "arrowParameter": true,
                        "memberVariableDeclaration": true,
                        "objectDestructuring": true,
                        "parameter": true,
                        "propertyDeclaration": true,
                        "variableDeclarationIgnoreFunction": true
                    }
                ],
                "no-null/no-null": "error",
                "unicorn/filename-case": "error",
                "unicorn/no-unused-properties": "error",
                "prefer-arrow/prefer-arrow-functions": [
                    "error",
                    {
                        "disallowPrototype": false,
                        "singleReturnOnly": false,
                        "classPropertiesAllowed": false,
                        "allowStandaloneDeclarations": true
                    }
                ],
                "import/no-unresolved": "off",
                "import/first": [
                    "error"
                ],
                "import/order": [
                    "error",
                    {
                        "newlines-between": "always",
                        "alphabetize": {
                            "order": "asc"
                        }
                    }
                ],
                "import/no-duplicates": "error",
                "import/newline-after-import": "error",
                "import/no-unassigned-import": [
                    "error",
                    {
                        "allow": [
                            "zone.js/**"
                        ]
                    }
                ],
                "rxjs/ban-observables": "error",
                "rxjs/ban-operators": "error",
                "rxjs/no-create": "error",
                "rxjs/no-internal": "error",
                "rxjs/no-exposed-subjects": [
                    "error",
                    {
                        "allowProtected": true
                    }
                ],
                "rxjs/no-nested-subscribe": "error",
                "rxjs/no-subject-unsubscribe": "error",
                "rxjs/no-unsafe-takeuntil": [
                    "error",
                    {
                        "allow": [
                            "defaultIfEmpty",
                            "endWith",
                            "every",
                            "finalize",
                            "finally",
                            "isEmpty",
                            "last",
                            "max",
                            "min",
                            "publish",
                            "publishBehavior",
                            "publishLast",
                            "publishReplay",
                            "reduce",
                            "share",
                            "shareReplay",
                            "skipLast",
                            "takeLast",
                            "throwIfEmpty",
                            "toArray"
                        ]
                    }
                ],
                "rxjs-angular/prefer-takeuntil": [
                    "warn",
                    {
                        "alias": [
                            "untilDestroyed"
                        ],
                        "checkComplete": true,
                        "checkDestroy": true
                    }
                ],
                "prettier/prettier": [
                    "error",
                    {
                        "endOfLine": "auto"
                    }
                ],
                "deprecation/deprecation": "warn",
                "arrow-parens": [
                    "error",
                    "always"
                ],
                "brace-style": [
                    "error",
                    "1tbs"
                ],
                "capitalized-comments": [
                    "error",
                    "never",
                    {
                        "line": {
                            "ignoreConsecutiveComments": true,
                            "ignorePattern": "TODO"
                        },
                        "block": {
                            "ignorePattern": ".*"
                        }
                    }
                ],
                "eqeqeq": [
                    "error",
                    "always"
                ],
                "comma-dangle": [
                    "error",
                    {
                        "arrays": "only-multiline",
                        "objects": "only-multiline",
                        "imports": "only-multiline",
                        "exports": "only-multiline",
                        "functions": "only-multiline"
                    }
                ],
                "complexity": [
                    "error",
                    {
                        "max": 20
                    }
                ],
                "default-case": "error",
                "prefer-arrow-callback": [
                    "error",
                    {
                        "allowNamedFunctions": true
                    }
                ],
                "max-classes-per-file": [
                    "error",
                    1
                ],
                "max-lines": [
                    "error",
                    1500
                ],
                "no-underscore-dangle": [
                    "error",
                    {
                        "allow": [
                            "_getHostElement"
                        ],
                        "allowAfterThis": true
                    }
                ],
                "no-duplicate-imports": "error",
                "no-empty": "error",
                "no-multiple-empty-lines": [
                    "error",
                    {
                        "max": 1
                    }
                ],
                "no-unused-vars": "off",
                "no-template-curly-in-string": "error",
                "padding-line-between-statements": [
                    "error",
                    {
                        "blankLine": "always",
                        "prev": "*",
                        "next": "return"
                    }
                ],
                "sort-imports": [
                    "error",
                    {
                        "ignoreDeclarationSort": true,
                        "allowSeparatedGroups": true,
                        "ignoreCase": true
                    }
                ],
                "sort-vars": "error",
                "space-in-parens": [
                    "off",
                    "never"
                ],
                "spaced-comment": "error",
                "yoda": "error"
            }
        },
        {
            "files": [
                "*.html"
            ],
            "extends": [
                "plugin:@angular-eslint/template/recommended"
            ],
            "rules": {
                "@angular-eslint/template/no-call-expression": "error",
                "@angular-eslint/template/no-autofocus": "error",
                "@angular-eslint/template/banana-in-box": "error"
            }
        }
    ]
}